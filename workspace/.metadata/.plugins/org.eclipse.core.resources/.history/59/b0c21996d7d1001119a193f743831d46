package diku.oopd.gui;

import javax.swing.event.TableModelListener;

import org.eclipse.jdt.annotation.Nullable;

public abstract class TableModel<T>
{
  
  class TableModelImpl implements javax.swing.table.TableModel
  {
    
    @Override
    public void addTableModelListener(@Nullable TableModelListener listener)
    {
      TableModel.this.addTableModelListener(listener);
    }
    
    @Override
    public void removeTableModelListener(@Nullable TableModelListener listener)
    {
      TableModel.this.removeTableModelListener(listener);
    }

    @Override
    public int getColumnCount()
    {
      return TableModel.this.getColumnCount();
    }
    
    @Override
    public int getRowCount()
    {
      return TableModel.this.getRowCount();
    }

    @Override
    @Nullable
    public Class<?> getColumnClass(int columnIndex)
    {
      return null;
    }
    
    @Override
    @Nullable
    public String getColumnName(int columnIndex)
    {
      return null;
    }

    

    @Override
    public Object getValueAt(int rowIndex, int columnIndex)
    {
      return TableModel.this.getValueAt(rowIndex, columnIndex);
    }

    @Override
    public boolean isCellEditable(int rowIndex, int columnIndex)
    {
      return TableModel.this.isCellEditable(rowIndex, columnIndex);
    }

    

    @Override
    public void setValueAt(@Nullable Object aValue, int rowIndex, int columnIndex)
    {
      return;
    } 
  }
  
  private TableModelImpl tableModel;
  
  public TableModel()
  {
    this.tableModel = new TableModelImpl();
  }
  
  @Nullable
  TableModelImpl getTableModel()
  {
    return this.tableModel;
  }
  
  public abstract void removeTableModelListener(@Nullable TableModelListener listener);
  public abstract void addTableModelListener(@Nullable TableModelListener listener);
  public abstract boolean isCellEditable(int rowIndex, int columnIndex);
  
  public abstract void setValueAt(T value, int rowIndex, int columnIndex);
  public abstract T getValueAt(int rowIndex, int columnIndex);
  public abstract int getRowCount();
  public abstract int getColumnCount();
}
